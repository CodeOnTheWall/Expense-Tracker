{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Btrader\\\\Documents\\\\practice\\\\expense-tracker-mern\\\\frontend\\\\src\\\\features\\\\newExpenses\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState } from \"react\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport Input from \"../../components/UI/Input/input\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./ExpenseForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  // onSaveExpense={saveExpenseDataHandler} from NewExpense.js\n\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [error, setError] = useState();\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    // console.log(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (enteredTitle.trim().length === 0 || enteredAmount.trim().length === 0 || !enteredDate) {\n      // trim takes away any empty spaces (whitespace) without modifying the original string\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid Title and Amount (non-empty values)\"\n      });\n      return;\n    }\n    if (+enteredAmount < 1) {\n      setError({\n        title: \"Invalid amount\",\n        message: \"Please enter a valid Amount (>0)\"\n      });\n      // note this is an object as error itself will have title and message to call on\n      return;\n    }\n    const enteredExpenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpense(enteredExpenseData);\n    // lifting this enteredExpenseData to our parent, NewExpense\n    // here is good example of giving this data back to parent via props\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    // 2 way binding - also need value in input for 2 way binding to work, in order to reset form field\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  // I dont need these handlers in other files, so I wont use useContext here\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Modal, {\n      onCloseModal: errorHandler,\n      title: error.title,\n      message: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"new-expense__controls\"],\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          className: classes[\"new-expense__control\"],\n          id: \"Title\"\n          // this is what shows as the label\n          ,\n          label: \"title\",\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes[\"new-expense__control\"],\n          id: \"Amount\",\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          className: classes[\"new-expense__control\"],\n          id: \"Date\",\n          type: \"date\",\n          min: \"2023-01-01\",\n          max: \"2026-12-31\",\n          value: enteredDate,\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes[\"new-expense__actions\"],\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"THPbld5OEJ0XvCD0s90rFeI5NlU=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","Fragment","useState","Modal","Input","Button","classes","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","error","setError","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","trim","length","title","message","enteredExpenseData","amount","date","Date","onSaveExpense","errorHandler"],"sources":["C:/Users/Btrader/Documents/practice/expense-tracker-mern/frontend/src/features/newExpenses/ExpenseForm.js"],"sourcesContent":["import React, { Fragment, useState } from \"react\";\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Input from \"../../components/UI/Input/input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\n\r\nimport classes from \"./ExpenseForm.module.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  // onSaveExpense={saveExpenseDataHandler} from NewExpense.js\r\n\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const [error, setError] = useState();\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // console.log(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      enteredTitle.trim().length === 0 ||\r\n      enteredAmount.trim().length === 0 ||\r\n      !enteredDate\r\n    ) {\r\n      // trim takes away any empty spaces (whitespace) without modifying the original string\r\n      setError({\r\n        title: \"Invalid input\",\r\n        message: \"Please enter a valid Title and Amount (non-empty values)\",\r\n      });\r\n      return;\r\n    }\r\n    if (+enteredAmount < 1) {\r\n      setError({\r\n        title: \"Invalid amount\",\r\n        message: \"Please enter a valid Amount (>0)\",\r\n      });\r\n      // note this is an object as error itself will have title and message to call on\r\n      return;\r\n    }\r\n    const enteredExpenseData = {\r\n      title: enteredTitle,\r\n      amount: enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n    props.onSaveExpense(enteredExpenseData);\r\n    // lifting this enteredExpenseData to our parent, NewExpense\r\n    // here is good example of giving this data back to parent via props\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n    // 2 way binding - also need value in input for 2 way binding to work, in order to reset form field\r\n  };\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  // I dont need these handlers in other files, so I wont use useContext here\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && (\r\n        <Modal\r\n          onCloseModal={errorHandler}\r\n          title={error.title}\r\n          message={error.message}\r\n        />\r\n      )}\r\n      <form onSubmit={submitHandler}>\r\n        <div className={classes[\"new-expense__controls\"]}>\r\n          <Input\r\n            className={classes[\"new-expense__control\"]}\r\n            id=\"Title\"\r\n            // this is what shows as the label\r\n            label=\"title\"\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n          <Input\r\n            className={classes[\"new-expense__control\"]}\r\n            id=\"Amount\"\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n          <Input\r\n            className={classes[\"new-expense__control\"]}\r\n            id=\"Date\"\r\n            type=\"date\"\r\n            min=\"2023-01-01\"\r\n            max=\"2026-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className={classes[\"new-expense__actions\"]}>\r\n          <Button type=\"submit\">Add Expense</Button>\r\n        </div>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}