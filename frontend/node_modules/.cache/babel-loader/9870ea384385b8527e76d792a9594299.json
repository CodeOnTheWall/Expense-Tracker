{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Btrader\\\\Documents\\\\practice\\\\expense-tracker-mern\\\\frontend\\\\src\\\\features\\\\newExpenses\\\\NewExpense.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport Button from \"../../components/UI/Button/Button\";\nimport classes from \"./NewExpense.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewExpense = () => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n      // important to always give a random id\n    };\n  };\n  // enteredExpenseData is our param expected to receive from ExpenseForm.js\n  // sending our useContext state the expenseData\n  // called Handler as it handles our information\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes[\"new-expense\"],\n    children: [!isEditing && /*#__PURE__*/_jsxDEV(Button, {\n      onClick: startEditingHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpense: saveExpenseDataHandler,\n      onCancel: stopEditingHandler\n      // not actually using this onCancel, but I could if i wanted a button to close the form\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(NewExpense, \"N4qUVpaen/rROL8jPu/4huFD8lA=\");\n_c = NewExpense;\nexport default NewExpense;\nvar _c;\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"names":["useState","ExpenseForm","Button","classes","NewExpense","isEditing","setIsEditing","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","startEditingHandler","stopEditingHandler"],"sources":["C:/Users/Btrader/Documents/practice/expense-tracker-mern/frontend/src/features/newExpenses/NewExpense.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\n\r\nimport classes from \"./NewExpense.module.css\";\r\n\r\nconst NewExpense = () => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n      // important to always give a random id\r\n    };\r\n  };\r\n  // enteredExpenseData is our param expected to receive from ExpenseForm.js\r\n  // sending our useContext state the expenseData\r\n  // called Handler as it handles our information\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes[\"new-expense\"]}>\r\n      {!isEditing && (\r\n        <Button onClick={startEditingHandler}>Add New Expense</Button>\r\n      )}\r\n      {/* !false is true, so above button will show unless isEditing is true */}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpense={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n          // not actually using this onCancel, but I could if i wanted a button to close the form\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,mCAAmC;AAEtD,OAAOC,OAAO,MAAM,yBAAyB;AAAC;AAE9C,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,sBAAsB,GAAIC,kBAAkB,IAAK;IACrD,MAAMC,WAAW,GAAG;MAClB,GAAGD,kBAAkB;MACrBE,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ;MAC1B;IACF,CAAC;EACH,CAAC;EACD;EACA;EACA;;EAEA,MAAMC,mBAAmB,GAAG,MAAM;IAChCR,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMS,kBAAkB,GAAG,MAAM;IAC/BT,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACE;IAAK,SAAS,EAAEH,OAAO,CAAC,aAAa,CAAE;IAAA,WACpC,CAACE,SAAS,iBACT,QAAC,MAAM;MAAC,OAAO,EAAES,mBAAoB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QACtC,EAEAT,SAAS,iBACR,QAAC,WAAW;MACV,aAAa,EAAEE,sBAAuB;MACtC,QAAQ,EAAEQ;MACV;IAAA;MAAA;MAAA;MAAA;IAAA,QAEH;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GArCIX,UAAU;AAAA,KAAVA,UAAU;AAuChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module"}