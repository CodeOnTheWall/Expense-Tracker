{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Btrader\\\\Documents\\\\practice\\\\expense-tracker-mern\\\\frontend\\\\src\\\\components\\\\UI\\\\Modal\\\\Modal.js\";\nimport React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Card from \"../Card/Card\";\nimport Button from \"../Button/Button\";\nimport classes from \"./Modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Backdrop = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.backdrop,\n    onClick: props.onCloseModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n_c = Backdrop;\nconst ModalOverlay = props => {\n  // from Parent UserInputForm.js\n  // onCloseModal={errorHandler}\n  // title={error.title}\n  // message={error.message}\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.modal,\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: classes.header,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onCloseModal,\n        children: \"Okay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c2 = ModalOverlay;\nconst Modal = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(Backdrop, {\n      onCloseModal: props.onCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), document.getElementById(\"backdrop-root\")), /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxDEV(ModalOverlay, {\n      onCloseModal: props.onCloseModal,\n      title: props.title,\n      message: props.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), document.getElementById(\"overlay-root\"))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Modal;\nexport default Modal;\n// portal is from react DOM library, not react library\n// createPortal takes 2 arguments, 1st is react node that should be rendered\n// and 2nd is a pointer to that container in the real DOM where this container should be rendered in\n// document.getElementById is a browser API\n// now this overlay is no longer nested in other JSX code, and we 'portalled' this HTML code to another place\n\n// added in public/index.html, we do this so that things like modals get put on top of everything\n// since its possible that the overlay could be deeply nested\n// <div id=\"backdrop-root\"></div>\n// <div id=\"overlay-root\"></div>\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Backdrop\");\n$RefreshReg$(_c2, \"ModalOverlay\");\n$RefreshReg$(_c3, \"Modal\");","map":{"version":3,"names":["React","Fragment","ReactDOM","Card","Button","classes","Backdrop","props","backdrop","onCloseModal","ModalOverlay","modal","header","title","content","message","actions","Modal","createPortal","document","getElementById"],"sources":["C:/Users/Btrader/Documents/practice/expense-tracker-mern/frontend/src/components/UI/Modal/Modal.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport Card from \"../Card/Card\";\r\nimport Button from \"../Button/Button\";\r\n\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onCloseModal} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  // from Parent UserInputForm.js\r\n  // onCloseModal={errorHandler}\r\n  // title={error.title}\r\n  // message={error.message}\r\n  return (\r\n    <Card className={classes.modal}>\r\n      <header className={classes.header}>\r\n        <h2>{props.title}</h2>\r\n      </header>\r\n      <div className={classes.content}>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      <footer className={classes.actions}>\r\n        <Button onClick={props.onCloseModal}>Okay</Button>\r\n      </footer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onCloseModal={props.onCloseModal} />,\r\n        document.getElementById(\"backdrop-root\")\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay\r\n          onCloseModal={props.onCloseModal}\r\n          title={props.title}\r\n          message={props.message}\r\n        />,\r\n        document.getElementById(\"overlay-root\")\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default Modal;\r\n// portal is from react DOM library, not react library\r\n// createPortal takes 2 arguments, 1st is react node that should be rendered\r\n// and 2nd is a pointer to that container in the real DOM where this container should be rendered in\r\n// document.getElementById is a browser API\r\n// now this overlay is no longer nested in other JSX code, and we 'portalled' this HTML code to another place\r\n\r\n// added in public/index.html, we do this so that things like modals get put on top of everything\r\n// since its possible that the overlay could be deeply nested\r\n// <div id=\"backdrop-root\"></div>\r\n// <div id=\"overlay-root\"></div>\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAEhC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,kBAAkB;AAErC,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,oBAAO;IAAK,SAAS,EAAEF,OAAO,CAACG,QAAS;IAAC,OAAO,EAAED,KAAK,CAACE;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAC1E,CAAC;AAAC,KAFIH,QAAQ;AAId,MAAMI,YAAY,GAAIH,KAAK,IAAK;EAC9B;EACA;EACA;EACA;EACA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEF,OAAO,CAACM,KAAM;IAAA,wBAC7B;MAAQ,SAAS,EAAEN,OAAO,CAACO,MAAO;MAAA,uBAChC;QAAA,UAAKL,KAAK,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACf,eACT;MAAK,SAAS,EAAER,OAAO,CAACS,OAAQ;MAAA,uBAC9B;QAAA,UAAIP,KAAK,CAACQ;MAAO;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QAClB,eACN;MAAQ,SAAS,EAAEV,OAAO,CAACW,OAAQ;MAAA,uBACjC,QAAC,MAAM;QAAC,OAAO,EAAET,KAAK,CAACE,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAc;MAAA;MAAA;MAAA;IAAA,QAC3C;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX,CAAC;AAAC,MAlBIC,YAAY;AAoBlB,MAAMO,KAAK,GAAIV,KAAK,IAAK;EACvB,oBACE,QAAC,QAAQ;IAAA,wBACNL,QAAQ,CAACgB,YAAY,eACpB,QAAC,QAAQ;MAAC,YAAY,EAAEX,KAAK,CAACE;IAAa;MAAA;MAAA;MAAA;IAAA,QAAG,EAC9CU,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CACzC,eACAlB,QAAQ,CAACgB,YAAY,eACpB,QAAC,YAAY;MACX,YAAY,EAAEX,KAAK,CAACE,YAAa;MACjC,KAAK,EAAEF,KAAK,CAACM,KAAM;MACnB,OAAO,EAAEN,KAAK,CAACQ;IAAQ;MAAA;MAAA;MAAA;IAAA,QACvB,EACFI,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf,CAAC;AAAC,MAjBIH,KAAK;AAkBX,eAAeA,KAAK;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}